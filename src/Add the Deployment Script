import torch
from torchvision import transforms
from PIL import Image

class CNN(torch.nn.Module):
    # Same definition as in train.py
    ...

def predict(image_path):
    # Load the model
    model = CNN()
    model.load_state_dict(torch.load("model.pth"))
    model.eval()

    # Preprocess the image
    transform = transforms.Compose([transforms.Resize((32, 32)), transforms.ToTensor(), transforms.Normalize((0.5,), (0.5,))])
    image = Image.open(image_path)
    image = transform(image).unsqueeze(0)

    # Perform inference
    output = model(image)
    predicted_class = torch.argmax(output, dim=1).item()
    print(f"Predicted class: {predicted_class}")

if __name__ == "__main__":
    predict("path/to/image.jpg")
